/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Collection, CollectionInterface } from "../Collection";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c816200003e565b50620000383362000057565b6200018c565b805162000053906002906020840190620000a9565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000b7906200014f565b90600052602060002090601f016020900481019282620000db576000855562000126565b82601f10620000f657805160ff191683800117855562000126565b8280016001018555821562000126579182015b828111156200012657825182559160200191906001019062000109565b506200013492915062000138565b5090565b5b8082111562000134576000815560010162000139565b600181811c908216806200016457607f821691505b602082108114156200018657634e487b7160e01b600052602260045260246000fd5b50919050565b61176e806200019c6000396000f3fe608060405234801561001057600080fd5b50600436106100c85760003560e01c8063715018a611610081578063e985e9c51161005b578063e985e9c5146101a1578063f242432a146101dd578063f2fde38b146101f057600080fd5b8063715018a61461016b5780638da5cb5b14610173578063a22cb4651461018e57600080fd5b80630e89341c116100b25780630e89341c146101165780632eb2c2d6146101365780634e1273f41461014b57600080fd5b8062fdd58e146100cd57806301ffc9a7146100f3575b600080fd5b6100e06100db366004611031565b610203565b6040519081526020015b60405180910390f35b610106610101366004611071565b6102ac565b60405190151581526020016100ea565b610129610124366004611095565b610349565b6040516100ea91906110fb565b61014961014436600461125a565b6103dd565b005b61015e610159366004611304565b61047f565b6040516100ea919061140a565b6101496105bd565b6003546040516001600160a01b0390911681526020016100ea565b61014961019c36600461141d565b610623565b6101066101af366004611459565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101496101eb36600461148c565b610632565b6101496101fe3660046114f1565b6106cd565b60006001600160a01b0383166102865760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b031982167fd9b67a2600000000000000000000000000000000000000000000000000000000148061030f57506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061034357507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600280546103589061150c565b80601f01602080910402602001604051908101604052809291908181526020018280546103849061150c565b80156103d15780601f106103a6576101008083540402835291602001916103d1565b820191906000526020600020905b8154815290600101906020018083116103b457829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103f957506103f985336101af565b61046b5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000606482015260840161027d565b61047885858585856107af565b5050505050565b606081518351146104f85760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d617463680000000000000000000000000000000000000000000000606482015260840161027d565b6000835167ffffffffffffffff8111156105145761051461110e565b60405190808252806020026020018201604052801561053d578160200160208202803683370190505b50905060005b84518110156105b55761058885828151811061056157610561611547565b602002602001015185838151811061057b5761057b611547565b6020026020010151610203565b82828151811061059a5761059a611547565b60209081029190910101526105ae81611573565b9050610543565b509392505050565b6003546001600160a01b031633146106175760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027d565b6106216000610a22565b565b61062e338383610a8c565b5050565b6001600160a01b03851633148061064e575061064e85336101af565b6106c05760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f7665640000000000000000000000000000000000000000000000606482015260840161027d565b6104788585858585610b81565b6003546001600160a01b031633146107275760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027d565b6001600160a01b0381166107a35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161027d565b6107ac81610a22565b50565b81518351146108265760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d61746368000000000000000000000000000000000000000000000000606482015260840161027d565b6001600160a01b03841661088a5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161027d565b3360005b84518110156109b45760008582815181106108ab576108ab611547565b6020026020010151905060008583815181106108c9576108c9611547565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561095c5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161027d565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061099990849061158e565b92505081905550505050806109ad90611573565b905061088e565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a049291906115a6565b60405180910390a4610a1a818787878787610d28565b505050505050565b600380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610b145760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c660000000000000000000000000000000000000000000000606482015260840161027d565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610be55760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161027d565b33610bfe818787610bf588610ece565b61047888610ece565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610c825760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161027d565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610cbf90849061158e565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610d1f828888888888610f19565b50505050505050565b6001600160a01b0384163b15610a1a5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610d6c90899089908890889088906004016115d4565b6020604051808303816000875af1925050508015610da7575060408051601f3d908101601f19168201909252610da491810190611632565b60015b610e5d57610db361164f565b806308c379a01415610ded5750610dc861166b565b80610dd35750610def565b8060405162461bcd60e51b815260040161027d91906110fb565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840161027d565b6001600160e01b0319811663bc197c8160e01b14610d1f5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161027d565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610f0857610f08611547565b602090810291909101015292915050565b6001600160a01b0384163b15610a1a5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610f5d90899089908890889088906004016116f5565b6020604051808303816000875af1925050508015610f98575060408051601f3d908101601f19168201909252610f9591810190611632565b60015b610fa457610db361164f565b6001600160e01b0319811663f23a6e6160e01b14610d1f5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161027d565b80356001600160a01b038116811461102c57600080fd5b919050565b6000806040838503121561104457600080fd5b61104d83611015565b946020939093013593505050565b6001600160e01b0319811681146107ac57600080fd5b60006020828403121561108357600080fd5b813561108e8161105b565b9392505050565b6000602082840312156110a757600080fd5b5035919050565b6000815180845260005b818110156110d4576020818501810151868301820152016110b8565b818111156110e6576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061108e60208301846110ae565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561114a5761114a61110e565b6040525050565b600067ffffffffffffffff82111561116b5761116b61110e565b5060051b60200190565b600082601f83011261118657600080fd5b8135602061119382611151565b6040516111a08282611124565b83815260059390931b85018201928281019150868411156111c057600080fd5b8286015b848110156111db57803583529183019183016111c4565b509695505050505050565b600082601f8301126111f757600080fd5b813567ffffffffffffffff8111156112115761121161110e565b604051611228601f8301601f191660200182611124565b81815284602083860101111561123d57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561127257600080fd5b61127b86611015565b945061128960208701611015565b9350604086013567ffffffffffffffff808211156112a657600080fd5b6112b289838a01611175565b945060608801359150808211156112c857600080fd5b6112d489838a01611175565b935060808801359150808211156112ea57600080fd5b506112f7888289016111e6565b9150509295509295909350565b6000806040838503121561131757600080fd5b823567ffffffffffffffff8082111561132f57600080fd5b818501915085601f83011261134357600080fd5b8135602061135082611151565b60405161135d8282611124565b83815260059390931b850182019282810191508984111561137d57600080fd5b948201945b838610156113a25761139386611015565b82529482019490820190611382565b965050860135925050808211156113b857600080fd5b506113c585828601611175565b9150509250929050565b600081518084526020808501945080840160005b838110156113ff578151875295820195908201906001016113e3565b509495945050505050565b60208152600061108e60208301846113cf565b6000806040838503121561143057600080fd5b61143983611015565b91506020830135801515811461144e57600080fd5b809150509250929050565b6000806040838503121561146c57600080fd5b61147583611015565b915061148360208401611015565b90509250929050565b600080600080600060a086880312156114a457600080fd5b6114ad86611015565b94506114bb60208701611015565b93506040860135925060608601359150608086013567ffffffffffffffff8111156114e557600080fd5b6112f7888289016111e6565b60006020828403121561150357600080fd5b61108e82611015565b600181811c9082168061152057607f821691505b6020821081141561154157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156115875761158761155d565b5060010190565b600082198211156115a1576115a161155d565b500190565b6040815260006115b960408301856113cf565b82810360208401526115cb81856113cf565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261160060a08301866113cf565b828103606084015261161281866113cf565b9050828103608084015261162681856110ae565b98975050505050505050565b60006020828403121561164457600080fd5b815161108e8161105b565b600060033d11156116685760046000803e5060005160e01c5b90565b600060443d10156116795790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156116a957505050505090565b82850191508151818111156116c15750505050505090565b843d87010160208285010111156116db5750505050505090565b6116ea60208286010187611124565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261172d60a08301846110ae565b97965050505050505056fea2646970667358221220a329efeff72f1c7501cd9fbb6b4d47077c47d9e17e2bcafd01d8a6b005138d3964736f6c634300080c0033";

type CollectionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollectionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Collection__factory extends ContractFactory {
  constructor(...args: CollectionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Collection";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Collection> {
    return super.deploy(overrides || {}) as Promise<Collection>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Collection {
    return super.attach(address) as Collection;
  }
  connect(signer: Signer): Collection__factory {
    return super.connect(signer) as Collection__factory;
  }
  static readonly contractName: "Collection";
  public readonly contractName: "Collection";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollectionInterface {
    return new utils.Interface(_abi) as CollectionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Collection {
    return new Contract(address, _abi, signerOrProvider) as Collection;
  }
}
